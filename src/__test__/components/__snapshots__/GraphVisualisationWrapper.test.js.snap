// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphVisualisationWrapper should match snapshot when context menu and bounding box 1`] = `
<Connect
  actions={
    Object {
      "addToArray": [Function],
      "removeFromArray": [Function],
      "removeFromObject": [Function],
      "resetSelectedEdges": [Function],
      "resetSelectedNodes": [Function],
      "setStoreState": [Function],
      "updateGraphData": [Function],
    }
  }
  boundingBoxGeometry={
    Object {
      "boundingBoxHeight": 200,
      "boundingBoxPosX": 100,
      "boundingBoxPosY": 100,
      "boundingBoxWidth": 200,
      "fixedPointX": 100,
      "fixedPointY": 100,
    }
  }
  contextMenuData={
    Object {
      "left": 0,
      "nodeId": "",
      "top": 0,
    }
  }
  currentGraph="graph-0"
  graphData={
    Object {
      "graph-0": Object {
        "label": "Main",
        "noDelete": true,
        "type": "full",
      },
    }
  }
  isBoundingBoxSelectable={true}
  mapToProps={[Function]}
  setStoreState={[MockFunction]}
  showContextMenu={true}
>
  <Component />
</Connect>
`;

exports[`GraphVisualisationWrapper should match snapshot when no context menu and no bounding box 1`] = `
<Connect
  actions={
    Object {
      "addToArray": [Function],
      "removeFromArray": [Function],
      "removeFromObject": [Function],
      "resetSelectedEdges": [Function],
      "resetSelectedNodes": [Function],
      "setStoreState": [Function],
      "updateGraphData": [Function],
    }
  }
  boundingBoxGeometry={
    Object {
      "boundingBoxHeight": 200,
      "boundingBoxPosX": 100,
      "boundingBoxPosY": 100,
      "boundingBoxWidth": 200,
      "fixedPointX": 100,
      "fixedPointY": 100,
    }
  }
  contextMenuData={
    Object {
      "left": 0,
      "nodeId": "",
      "top": 0,
    }
  }
  currentGraph="graph-0"
  graphData={
    Object {
      "graph-0": Object {
        "label": "Main",
        "noDelete": true,
        "type": "full",
      },
    }
  }
  isBoundingBoxSelectable={false}
  mapToProps={[Function]}
  setStoreState={[MockFunction]}
  showContextMenu={false}
>
  <Component />
</Connect>
`;
