// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditOntologyRestoreNode should match snapshot when type edge and no options 1`] = `
<Connect
  actions={
    Object {
      "addNumber": [Function],
      "addOrAppendToObject": [Function],
      "addSubValueToObject": [Function],
      "addToArray": [Function],
      "addToObject": [Function],
      "addValueToSubkeyObject": [Function],
      "removeFromArray": [Function],
      "removeFromObject": [Function],
      "setStoreState": [Function],
      "toggleFromArrayInKey": [Function],
      "toggleFromSubArray": [Function],
    }
  }
  addNumber={[MockFunction]}
  mapToProps={[Function]}
  operation="restore"
  optionEdges={Array []}
  optionNodes={Array []}
  setStoreState={[MockFunction]}
  type="edge"
>
  <Component />
</Connect>
`;

exports[`EditOntologyRestoreNode should match snapshot when type node and no options 1`] = `
<Connect
  actions={
    Object {
      "addNumber": [Function],
      "addOrAppendToObject": [Function],
      "addSubValueToObject": [Function],
      "addToArray": [Function],
      "addToObject": [Function],
      "addValueToSubkeyObject": [Function],
      "removeFromArray": [Function],
      "removeFromObject": [Function],
      "setStoreState": [Function],
      "toggleFromArrayInKey": [Function],
      "toggleFromSubArray": [Function],
    }
  }
  addNumber={[MockFunction]}
  mapToProps={[Function]}
  operation="restore"
  optionEdges={Array []}
  optionNodes={Array []}
  setStoreState={[MockFunction]}
  type="node"
>
  <Component />
</Connect>
`;

exports[`EditOntologyRestoreNode should match snapshot when type node and options 1`] = `
<Connect
  actions={
    Object {
      "addNumber": [Function],
      "addOrAppendToObject": [Function],
      "addSubValueToObject": [Function],
      "addToArray": [Function],
      "addToObject": [Function],
      "addValueToSubkeyObject": [Function],
      "removeFromArray": [Function],
      "removeFromObject": [Function],
      "setStoreState": [Function],
      "toggleFromArrayInKey": [Function],
      "toggleFromSubArray": [Function],
    }
  }
  addNumber={[MockFunction]}
  mapToProps={[Function]}
  operation="restore"
  optionEdges={Array []}
  optionNodes={
    Array [
      Object {
        "label": "Test",
        "value": "http://test.test/test",
      },
    ]
  }
  setStoreState={[MockFunction]}
  type="node"
>
  <Component />
</Connect>
`;
